
MAROON_VOTE_POS = {0, 1.05, -35.50}
TAN_VOTE_POS = {29.30, 1.05, -35.50}
MAROON_ZONE_POS = {0, 1.3, -51.66}
TAN_ZONE_POS = {29.30, 1.3, -51.66}
MAROON_ABILITY_POS = {12.60, 1.2, -41}
TAN_ABILITY_POS = {37, 1.2, -41}

function revealAbility(cardName, playerColor)
	local player = getPlayerObj(playerColor)
	local abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)
	local pos
	local result = {}

	if playerColor == "Maroon" then
		pos = MAROON_ABILITY_POS
	else
		pos = TAN_ABILITY_POS
	end

	result = moveCard12P(cardName, nil, pos, FACE_UP_ROT, playerColor)
	if result ~= -1 then
		player.broadcast("You played " .. result.name, {1,1,1})
		broadcastToAll(playerColor .. " has played " .. result.name, {1,1,1})
	end
end

function examineAbilityDeck(playerColor)
	local player = getPlayerObj(playerColor)
	local abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)
	local deckString = ""
	if abilityDeck == nil then
		player.broadcast("ERROR: Ability deck not found.", {1,1,1})
		return
	end
	local deckTable = abilityDeck.getObjects()
	player.print("Cards in the ability deck:")
	for k,v in pairs(deckTable) do
		deckString = deckString .. v.nickname .. " "
	end
	bigBroadcast(deckString, player)
	broadcastToAll(playerColor .. " examines the Ability deck.", {1,1,1})
end

function takeAbility(cardName, playerColor)
	local player = getPlayerObj(playerColor)
	local pos
	local foundIndex = nil
	local result = {}
	local abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)
	if abilityDeck == nil then
		player.broadcast("ERROR: Ability deck not found.", {1,1,1})
		return
	end
	local takeParams = {}
	local deckTable = abilityDeck.getObjects()

	if playerColor == "Maroon" then
		pos = MAROON_ZONE_POS
	else
		pos = TAN_ZONE_POS
	end

	for k,v in pairs(deckTable) do
		if string.match(string.lower(v.nickname), string.lower(cardName)) then
			foundIndex = v.index
		end
	end
	if foundIndex == nil then
		player.broadcast("ERROR: Ability not found in deck.", {1,1,1})
	else
		takeParams.index = foundIndex
		takeParams.position = pos
		abilityDeck.takeObject(takeParams)
		player.broadcast("You drew " .. deckTable[foundIndex+1].nickname .. " [FFFFFF]from the Ability deck.", {1,1,1})
		broadcastToAll(playerColor .. " takes an ability from the Ability deck", {1,1,1})
	end
end

function giveCardExp(cardName, targetColor, playerColor)
	local player = getPlayerObj(playerColor)
	local ph, pos, rot
	local result = {}
	if targetColor == "Maroon" then
		pos = MAROON_VOTE_POS
		pos[1] = pos[1] + 5
		rot = FACE_DOWN_ROT
	elseif targetColor == "Tan" then
		pos = TAN_VOTE_POS
		pos[1] = pos[1] + 5
		rot = FACE_DOWN_ROT
	else
		local ph = Player[targetColor].getPlayerHand()
		if ph then
			pos = {x = ph["pos_x"], y = ph["pos_y"], z = ph["pos_z"]}
		end
		rot = {x = ph["rot_x"], y = ph["rot_y"], z = ph["rot_z"]}
	end

	result = moveCard12P(cardName, nil, pos, FACE_DOWN_ROT, playerColor)
	if result ~= -1 then
		player.broadcast("You gave " .. targetColor .. " the " .. result.name .. " card.", {1,1,1})
	end
end
